FORMAT: 1A
HOST: https://coupon.ingresse.com

# Coupon Microservice

Discount coupon management microservice.

## Coupon Attributes

| Attribute    | Description                                                                                                                                                     |
|:-------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------|
| id           | Coupon identifier.                                                                                                                                              |
| companyId    | Whitelabel identifier to which the coupon belongs.                                                                                                              |
| userId       | Identifier of the user who registered the coupon.                                                                                                               |
| name         | Coupon code name.                                                                                                                                               |
| targetEvents | List of Coupon Target Events Ids (events where the coupon may be used). If the selected category is "whitelabel" sending this attribute becomes optional.       |
| category     | Coupon category, which can be “producer” or “whitelabel”.                                                                                                       |
| type         | Type of discount that the coupon will offer, which can be “fixed” for monetary value discounts or “dynamic” for percentage discounts.                           |
| discount     | Decimal number discount value for both type fixed and dynamic.                                                                                                  |
| usageLimit   | Number of times a coupon can be used in transactions.                                                                                                           |
| usageCount   | Number of times a coupon has been used in transactions.                                                                                                         |
| startUsage   | String containing date time and time zone in ISO 8601 standard which defines the beginning of coupon validity.                                                  |
| endUsage     | String containing date time and time zone in ISO 8601 standard which defines the end of coupon validity.                                                        |
| status       | Coupon situation, “active” represents that the coupon is active.                                                                                                |
| timezone     | Represents the UTC time difference that the coupon will consider. Obtained through the timezone sent in the startUsage and endUsage fields.                     |
| createdAt    | String containing date and time zone in ISO 8601 standard that records when the coupon was entered.                                                             |
| updatedAt    | String containing date time and time zone in ISO 8601 which informs when the coupon updated. If null then the coupon was never updated after your registration. |


## Start Transaction Attributes (Request)

| Attribute     | Description                                                       |
|:--------------|-------------------------------------------------------------------|
| eventId       | Event identifier for which the transaction will be opened. The eventId submission is optional, if it is sent, the transaction will prioritize the coupons associated with the eventId sent, if there are no coupons for the reported eventId, generic coupons will be applied (Whitelabel level).|
| couponName    | Name of the discount coupon you want to apply to the transaction. |
| transactionId | Transaction identifier generated by the checkout process.         |
| totalAmount   | Total transaction amount (no discount) to calculate the discount. |

## Start Transaction Attributes (Response)

| Attribute      | Description                                                                                                |
|:---------------|------------------------------------------------------------------------------------------------------------|
| id             | Transaction identifier.                                                                                    |
| userId         | Identifier of the user who initiated the transaction.                                                      |
| couponId       | Coupon identifier applied to the transaction.                                                              |
| eventId        | Identifier of the event to which the coupon is being applied.                                              |
| transactionId  | Transaction identifier generated by the checkout process.                                                  |
| status         | Transaction situation (always starts as “pending”).                                                        |
| discountType   | Type of discount granted by coupon applied to transaction (fixed or dynamic).                              |
| couponDiscount | Discount amount that was applied to the transaction in decimal number for both type “fixed” and “dynamic”. |
| totalAmount    | Total transaction amount (no discount) to calculate the discount.                                          |
| finalAmount    | Final transaction amount after discount is applied.                                                        |

## Close Transaction Attributes (IngresseAPI Postback)

| Attribute          | Description                                                                                                                  |
|:-------------------|------------------------------------------------------------------------------------------------------------------------------|
| webhook            | Identify what type of webhook should be reported (postback only).                                                            |
| timestamp          | Date and time postback is being sent                                                                                         |
| data.transactionId | Transaction identifier generated by the checkout process, previously started.                                                |
| data.status        | Transaction status according to IngresseAPI, which can be: “pending”, “approved”, “manual review”, “declined”, “authorized”. |
| data.date          | Date of transaction status update.                                                                                           |

## Error Codes

Coupon error codes

| Status  | Error Code                                         | Message                                                                                                          |
|:--------|----------------------------------------------------|------------------------------------------------------------------------------------------------------------------|
| `10001` | COUPON_UNIQUE_BY_EVENT_INVALID                     |This coupon is already associated with at least one of these events.                                              |
| `10002` | COUPON_COMPANY_ID_NOT_BLANK                        |Field companyId is required.                                                                                      |
| `10003` | COUPON_COMPANY_ID_BAD_TYPE                         |Field couponId must be integer type.                                                                              |
| `10004` | COUPON_USER_ID_NOT_BLANK                           |Field userId is required.                                                                                         |
| `10005` | COUPON_USER_ID_BAD_TYPE                            |Field userId must be integer type.                                                                                |
| `10006` | COUPON_TARGET_EVENTS_BAD_TYPE                      |targetEvents need to be an object Ex: [{eventId: 1}]                                                              |
| `10007` | COUPON_DUPLICATED_TARGET_EVENTS                    |A coupon can not contain duplicate target events.                                                                 |
| `10008` | COUPON_CATEGORY_BAD_CHOICE                         |This value {{ value }} is not valid, must be producer or whitelabel.                                              |
| `10009` | COUPON_CATEGORY_NOT_BLANK                          |Field category is required.                                                                                       |
| `10010` | COUPON_CATEGORY_BAD_TYPE                           |Field category must be string type.                                                                               |
| `10011` | COUPON_TYPE_BAD_CHOICE                             |This value {{ value }} is not valid, must be fixed or dynamic.                                                    |
| `10012` | COUPON_TYPE_NOT_BLANK                              |Field type is required.                                                                                           |
| `10013` | COUPON_TYPE_BAD_TYPE                               |Field type must be string type.                                                                                   |
| `10014` | COUPON_DISCOUNT_NOT_BLANK                          |Field discount is required.                                                                                       |
| `10015` | COUPON_DISCOUNT_BAD_TYPE                           |Field discount must be numeric type.                                                                              |
| `10016` | COUPON_NAME_NOT_BLANK                              |Field name is required.                                                                                           |
| `10017` | COUPON_NAME_BAD_NAME                               |This value {{ value }} is not valid, must be letters from a to z, numbers from 0 to 9 or a -                      |
| `10018` | COUPON_NAME_BAD_TYPE                               |Field name must be string type.                                                                                   |
| `10019` | COUPON_NAME_BAD_LENGTH                             |Coupon name must be at {{ limit }} characters.                                                                    |
| `10020` | COUPON_NAME_CANNOT_BE_UPDATED                      |Coupon name cannot be changed as it is already linked to transactions.                                            |
| `10021` | COUPON_USAGE_LIMIT_BAD_TYPE                        |Field usageLimit must be integer type.                                                                            |
| `10022` | COUPON_USAGE_LIMIT_CANNOT_BE_LESS_THAN_USED        |This coupon was used in {{ value }} transactions. The field usageLimit must be greater or equal than {{ value }}. |
| `10023` | COUPON_STATUS_BAD_TYPE                             |Field status must be string type.                                                                                 |
| `10024` | COUPON_START_USAGE_BAD_FORMAT                      |Field startUsage is not a valid datetime format. Must be 0000-00-00T00:00:00UTC.                                  |
| `10025` | COUPON_END_USAGE_BAD_FORMAT                        |Field endUsage is not a valid datetime format. Must be 0000-00-00T00:00:00UTC.                                    |
| `10026` | COUPON_START_END_USAGE_BAD_INTERVAL                |Field startUsage must be less than endUsage. or Field endUsage must be greater than startUsage.                   |
| `10027` | COUPON_CANNOT_BE_DELETED                           |This coupon cannot be deleted as it has already been used in no approved transactions.                            |
| `10028` | COUPON_DISCOUNT_DYNAMIC_CANNOT_BE_GREATER_THAN_100 |Coupon discount value of dynamic type cannot be greater than 100.                                                 |
| `10029` | COUPON_BAD_TIMEZONE                                |The fields startUsage and endUsage must be has the same timezone.                                                 |


Transaction error codes

| Status  | Error Code                                                          | Message                                                                                                        |
|:--------|---------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------|
| `11001` | TRANSACTION_START_COMPANY_ID_NOT_BLANK                              |Field companyId is required.                                                                                    |
| `11002` | TRANSACTION_START_COMPANY_ID_BAD_TYPE                               |Field companyId must be integer type.                                                                           |
| `11003` | TRANSACTION_START_EVENT_ID_NOT_BLANK                                |Field eventId is required.                                                                                      |
| `11004` | TRANSACTION_START_EVENT_ID_BAD_TYPE                                 |Field eventId must be integer type.                                                                             |
| `11005` | TRANSACTION_START_COUPON_NAME_NOT_BLANK                             |Field couponName is required.                                                                                   |
| `11006` | TRANSACTION_START_COUPON_NAME_BAD_TYPE                              |Field couponName must be integer type.                                                                          |
| `11007` | TRANSACTION_START_TRANSACTION_ID_NOT_BLANK                          |Field transactionId is required.                                                                                |
| `11008` | TRANSACTION_START_TRANSACTION_BAD_TYPE                              |Field transactionId must be string type.                                                                        |
| `11009` | TRANSACTION_START_TOTAL_AMOUNT_NOT_BLANK                            |Field totalAmount is required.                                                                                  |
| `11010` | TRANSACTION_START_TOTAL_AMOUNT_BAD_TYPE                             |Field totalAmount must be numeric type.                                                                         |
| `11011` | TRANSACTION_CLOSE_WEBHOOK_BAD_CHOICE                                |This value {{ value }} is not valid, must be postback.                                                          |
| `11012` | TRANSACTION_CLOSE_WEBHOOK_NOT_BLANK                                 |Field webbook is required.                                                                                      |
| `11013` | TRANSACTION_CLOSE_WEBHOOK_BAD_TYPE                                  |Field webbook must be string type.                                                                              |
| `11014` | TRANSACTION_CLOSE_TRANSACTION_ID_NOT_BLANK                          |Field transactionId is required.                                                                                |
| `11015` | TRANSACTION_CLOSE_TRANSACTION_ID_BAD_TYPE                           |Field transactionId must be string type.                                                                        |
| `11016` | TRANSACTION_CLOSE_STATUS_BAD_CHOICE                                 |This value {{ value }} is not valid, must be 'pending', 'approved', 'manual review', 'declined' or 'authorized'.|
| `11017` | TRANSACTION_CLOSE_STATUS_NOT_BLANK                                  |Field status is required.                                                                                       |
| `11018` | TRANSACTION_CLOSE_STATUS_BAD_TYPE                                   |Field status must be string type.                                                                               |
| `11019` | TRANSACTION_CLOSE_DATE_NOT_BLANK                                    |Field date is required.                                                                                         |
| `11020` | TRANSACTION_START_TRANSACTION_ALREADY_STARTED                       |This transaction is already started.                                                                            |
| `11021` | TRANSACTION_START_NOT_FOUND_COUPON_FOR_EVENT                        |Not found or invalid coupon for this event.                                                                     |
| `11022` | TRANSACTION_START_TOTAL_AMOUNT_CANNOT_BE_LESS_COUPON_DISCOUNT_VALUE |The transaction amount cannot be less than the discount amount offered by the coupon.                           |
| `11023` | TRANSACTION_START_USER_ID_NOT_BLANK                                 |Field userId is required.                                                                                       |
| `11024` | TRANSACTION_START_USER_ID_BAD_TYPE                                  |Field userId must be integer type.                                                                              |
| `11025` | TRANSACTION_START_ATTEMPT_FAILED_BEFORE_COUPON_VALIDITY             |Attempt to use before coupon validity period.                                                                   |
| `11026` | TRANSACTION_START_ATTEMPT_FAILED_AFTER_COUPON_VALIDITY              |Attempt to use after coupon validity period.                                                                    |
| `11027` | TRANSACTION_START_ATTEMPT_FAILED_COUPON_USAGE_LIMIT_REACHED         |Coupon usage limit reached.                                                                                     |

## Coupons [/coupons]

### Get all coupons [GET]

Endpoint that allows paged fetching, returning only coupons associated with companyId and userId contained in the submitted JWT token.

+ Request

    + Headers
        ```
        Content-Type: application/json
        Authorization: JWT
        ```

+ Response 200 (application/json)
    + Attributes (AllCouponsPayload)

### Create coupon [POST]

Endpoint that allows you to register coupons so that producers and whitelabels can offer discounts to customers at their events.

+ Request

    + Headers
        ```
        Content-Type: application/json
        Authorization: JWT
        ```

    + Attributes (CreateCouponPayload)

+ Response 201 (application/json)
    + Attributes (OneCouponPayload)

## Coupon [/coupons/{id}]

### Get one coupon [GET]

Endpoint that allows unique coupon search by id.

+ Parameters
    + id (number)

+ Request

    + Headers
        ```
        Content-Type: application/json
        Authorization: JWT
        ```

+ Response 200 (application/json)
    + Attributes (OneCouponPayload)

### Update coupon [PUT]

Endpoint that allows the coupon data to be updated.

+ Parameters
    + id (number)

+ Request

    + Headers
        ```
        Content-Type: application/json
        Authorization: JWT
        ```

    + Attributes (CreateCouponPayload)

+ Response 204 (application/json)

### Delete coupon [DELETE]

Endpoint that allows the coupon to be deleted by id and belongs to companyId and userId contained in the sent JWT token.

+ Parameters
    + id (number)

+ Request

    + Headers
        ```
        Content-Type: application/json
        Authorization: JWT
        ```

+ Response 204 (application/json)

## Transactions [/transactions]

### Transaction start [POST /transactions/start]

Endpoint that allows the opening of the transaction and coupon application and returns the calculated discount amount.

+ Request

    + Headers
        ```
        Content-Type: application/json
        Authorization: JWT
        ```

    + Attributes (StartTransactionPayload)

+ Response 201 (application/json)

    + Attributes (StartTransactionResponse)

### Transaction close [POST /transactions/close]

Endpoint that allows you to receive Ingresse API postback and updates the previously opened transaction.

+ Request

    + Headers
        ```
        Content-Type: application/json
        Authorization: JWT
        ```

    + Attributes (CloseTransactionPayload)

+ Response 201 (application/json)

    + Attributes (CloseTransactionResponse)

# Data Structures

## CreateCouponPayload (object)
+ category: `producer` (string, required)
+ type: `fixed` (string, required)
+ discount: `50` (number, required)
+ name: `fixed-producer` (string, required)
+ usageLimit: `50` (number)
+ startUsage: `2019-08-01T17:38:00-03:00` (string)
+ endUSage: `2019-08-31T18:38:00-03:00` (string)
+ targetEvents (array, required)
    + (object)
        + eventId: `123410` (number)
    + (object)
        + eventId: `123412` (number)

## AllCouponsPayload (object)
+ data (array)
    + (object)
        + id: `1` (number)
        + companyId: `1` (number)
        + userId: `456` (number)
        + targetEvents (array)
            + (object)
                + eventId: `123410` (number)
            + (object)
                + eventId: `123412` (number)
        + category: `producer` (string)
        + type: `fixed` (string)
        + discount: `50` (number)
        + name: `fixed-producer` (string)
        + usageLimit: `50` (number)
        + usageCount: `0` (number)
        + startUsage: `2019-08-01T17:38:00-03:00` (string)
        + endUSage: `2019-08-31T18:38:00-03:00` (string)
        + status: `active` (string)
        + timezone: `-03:00` (string)
        + createdAt: `2019-08-08T11:47:39-03:00` (string)
        + updatedAt: `null` (string)
+ pagination (object)
    + current: `1` (number)
    + items: `1` (number)
    + pages: `1` (number)
    + pageSize: `25` (number)

## OneCouponPayload (object)
+ data (object)
    + id: `1` (number)
    + companyId: `1` (number)
    + userId: `456` (number)
    + targetEvents (array)
        + (object)
            + eventId: `123410` (number)
        + (object)
            + eventId: `123412` (number)
    + category: `producer` (string)
    + type: `fixed` (string)
    + discount: `50` (number)
    + name: `fixed-producer` (string)
    + usageLimit: `50` (number)
    + usageCount: `0` (number)
    + startUsage: `2019-08-01T17:38:00-03:00` (string)
    + endUsage: `2019-08-31T18:38:00-03:00` (string)
    + status: `active` (string)
    + timezone: `-03:00` (string)
    + createdAt: `2019-08-08T11:47:39-03:00` (string)
    + updatedAt: `null` (string)

## StartTransactionPayload (object)
+ eventId: `123410` (number)
+ userId: `123` (number, required)
+ couponName: `fixed-producer` (string, required)
+ transactionId: `ABCDEFGHIJK1234da567890000000147852369` (string, required),
+ totalAmount: `100` (number, required)

## StartTransactionResponse (object)
+ data (object)
    + id: `5` (number)
    + userId: `123` (number)
    + coupon (OneCouponPayload)
    + couponId: `1` (number)
    + eventId: `123410` (number)
    + transactionId: `ABCDEFGHIJK1234da567890000000147852369` (string)
    + status: `pending` (string)
    + discountType: `fixed` (string)
    + couponDiscount: `50` (number)
    + totalAmount: `100` (number)
    + discountAmount: `51` (number)
    + finalAmount: `49` (number)
    + createdAt: `2019-08-09T18:54:45+00:00` (string)
    + updatedAt: `null` (string)

## CloseTransactionPayload (object)
+ webhook: `postback` (string, required),
+ timestamp: `2019-07-01 15:00:00` (string, required)
+ data (object)
    + transactionId: `ABCDEFGHIJK1234567890000000147852369` (string, required)
    + status: `approved` (string, required)
    + date: `2019-07-01 14:00:00` (string, required)

## CloseTransactionResponse
+ data (object)
    + id: `5` (number)
    + userId: `123` (number)
    + coupon (OneCouponPayload)
    + couponId: `1` (number)
    + eventId: `123410` (number)
    + transactionId: `ABCDEFGHIJK1234da567890000000147852369` (string)
    + status: `approved` (string)
    + discountType: `fixed` (string)
    + couponDiscount: `50` (number)
    + totalAmount: `100` (number)
    + discountAmount: `51` (number)
    + finalAmount: `49` (number)
    + createdAt: `2019-08-09T18:54:45+00:00` (string)
    + updatedAt: `2019-08-09T19:55:46+00:00` (string)

## AuthorizationHeaderIsRequired (object)
+ code: `401` (number)
+ message: `Authorization header is required.` (string)

## AuthorizationHeaderIsWrong (object)
+ code: `401` (number)
+ message: `Authentication failed.` (string)
© 2020 GitHub, Inc.
Terms
Privacy
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
